name: Train-Pipeline

on:
  push:
    branches:
    - main
    - train_code
  pull_request:
    branches:
    - main

jobs:
  process-data:
      runs-on: ubuntu-latest

      steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Process data
        run: python data_processing.py --base_data_url ${{secrets.BASE_DATA_URL}} --data_file_name ${{secrets.DATA_FILE_NAME}} --local_data_path ${{secrets.LOCAL_DATA_PATH}} --test_size ${{secrets.TEST_SIZE}} --random_state ${{secrets.RANDOM_STATE}} --train_variables_file_name ${{secrets.TRAIN_VARIABLES_FILE_NAME}} --train_response_file_name ${{secrets.TRAIN_RESPONSE_FILE_NAME}} --test_variables_file_name ${{secrets.TEST_VARIABLES_FILE_NAME}} --test_response_file_name ${{secrets.TEST_RESPONSE_FILE_NAME}} --file_encoding ${{secrets.FILE_ENCODING}} --file_separator ${{secrets.FILE_SEPARATOR}}

  train_pipeline:
      runs-on: ubuntu-latest
      needs: [process-data]
      steps:
        - name: Train model
          run: python train_model.py --tracking_uri ${{secrets.MLFLOW_TRACKING_URI}} --tracking_username ${{secrets.MLFLOW_TRACKING_USERNAME}} --tracking_password ${{secrets.MLFLOW_TRACKING_PASSWORD}} --registry_model_name ${{secrets.MLFLOW_REGISTRY_MODEL_NAME}} --local_data_path ${{secrets.LOCAL_DATA_PATH}} --random_state ${{secrets.RANDOM_STATE}} --train_variables_file_name ${{secrets.TRAIN_VARIABLES_FILE_NAME}} --train_response_file_name ${{secrets.TRAIN_RESPONSE_FILE_NAME}} --test_variables_file_name ${{secrets.TEST_VARIABLES_FILE_NAME}} --test_response_file_name ${{secrets.TEST_RESPONSE_FILE_NAME}} --file_encoding ${{secrets.FILE_ENCODING}} --file_separator ${{secrets.FILE_SEPARATOR}}